{"ast":null,"code":"var _jsxFileName = \"/home/bekzod/project/ShoppingProject/src/pages/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../config';\nimport GoodList from './GoodList';\nimport Loader from './Loader/Loader';\nimport ShoppinCart from './ShoppinCart';\nimport { ToastContainer, toast } from 'react-toastify';\nimport BasketList from './BasketList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const contextEl = document.location.pathname.substring(1, document.location.pathname.length - 1);\n  const [loading, setLoading] = useState(true);\n  const [goods, setGoods] = useState([]);\n  const [isShowBasket, setIsShowBasket] = useState(false);\n  const [order, setOrder] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [dataPlayer, setDataPlayer] = useState([]);\n  useEffect(() => {\n    fetch('https://fortniteapi.io/v2/items/list?lang=en', {\n      headers: {\n        Authorization: API_KEY\n      }\n    }).then(res => res.json()).then(data => setDataPlayer(data));\n    data.forEach(() => {});\n  });\n\n  const addCardToBasket = item => {\n    const itemIndex = order.findIndex(orderItem => orderItem.id === item.id);\n\n    if (itemIndex < 0) {\n      const newItem = { ...item,\n        quantity: 1\n      };\n      setOrder([...order, newItem]);\n    } else {\n      const newOrder = order.map((elem, index) => {\n        if (index === itemIndex) {\n          return { ...elem,\n            quantity: elem.quantity + 1\n          };\n        } else {\n          return elem;\n        }\n      });\n      setOrder(newOrder);\n    }\n\n    toast.success(\"you added item to basket successfully\", {\n      autoClose: 2000\n    });\n    console.log(totalPrice);\n  };\n\n  const deleteCardFromBasket = itemId => {\n    const newOrder = order.filter(item => item.id !== itemId);\n    console.log(newOrder);\n    setOrder(newOrder);\n    toast.error(\"Item deleted successfully\", {\n      autoClose: 1000\n    });\n  }; // increment Product Item\n\n\n  const incrementQuantity = itemId => {\n    const newOrder = order.map(item => {\n      if (item.id === itemId) {\n        return { ...item,\n          quantity: item.quantity + 1\n        };\n      } else {\n        return item;\n      }\n    });\n    setOrder(newOrder);\n  }; // decrement Product Item\n\n\n  const decrementQuantity = itemId => {\n    const newOrder = order.map(item => {\n      if (item.id === itemId) {\n        return { ...item,\n          quantity: item.quantity > 0 ? item.quantity - 1 : 0\n        };\n      } else {\n        return item;\n      }\n    });\n    setOrder(newOrder);\n  };\n\n  const showBasket = () => {\n    setIsShowBasket(!isShowBasket);\n  };\n\n  useEffect(() => {\n    let totalPrice = 0;\n    order.length && order.forEach(item => {\n      totalPrice += item.price * item.quantity;\n    });\n    setTotalPrice(totalPrice);\n  }, [order]);\n  useEffect(() => {\n    fetch(`https://fortniteapi.io/v1/shop?lang=${contextEl}`, {\n      headers: {\n        Authorization: API_KEY\n      }\n    }).then(res => res.json()).then(data => {\n      setGoods(data.featured);\n      setLoading(false);\n    });\n  }, [contextEl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main container-fluid-m container-fluid-l container-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [isShowBasket && /*#__PURE__*/_jsxDEV(BasketList, {\n          order: order,\n          showBasket: showBasket,\n          deleteCardFromBasket: deleteCardFromBasket,\n          incrementQuantity: incrementQuantity,\n          decrementQuantity: decrementQuantity,\n          totalPrice: totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ShoppinCart, {\n          items: order,\n          showBasket: showBasket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GoodList, {\n          addCardToBasket: addCardToBasket,\n          item: goods\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Main, \"Gwm574tXtKkdwHUH4aNr3SIVbo4=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bekzod/project/ShoppingProject/src/pages/Main.jsx"],"names":["React","useEffect","useState","API_KEY","GoodList","Loader","ShoppinCart","ToastContainer","toast","BasketList","Main","contextEl","document","location","pathname","substring","length","loading","setLoading","goods","setGoods","isShowBasket","setIsShowBasket","order","setOrder","totalPrice","setTotalPrice","dataPlayer","setDataPlayer","fetch","headers","Authorization","then","res","json","data","forEach","addCardToBasket","item","itemIndex","findIndex","orderItem","id","newItem","quantity","newOrder","map","elem","index","success","autoClose","console","log","deleteCardFromBasket","itemId","filter","error","incrementQuantity","decrementQuantity","showBasket","price","featured"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { API_KEY } from '../config';\nimport GoodList from './GoodList';\nimport Loader from './Loader/Loader';\nimport ShoppinCart from './ShoppinCart';\nimport { ToastContainer, toast } from 'react-toastify';\nimport BasketList from './BasketList';\n\n\nexport default function Main() {\n    const contextEl = document.location.pathname.substring(1, document.location.pathname.length - 1)\n    const [loading, setLoading] = useState(true);\n    const [goods, setGoods] = useState([]);\n    const [isShowBasket, setIsShowBasket] = useState(false)\n    const [order, setOrder] = useState([])\n    const [totalPrice, setTotalPrice] = useState(0)\n    const [dataPlayer,setDataPlayer]=useState([])\n\n    useEffect(()=>{\n        fetch('https://fortniteapi.io/v2/items/list?lang=en',{\n            headers:{\n                Authorization:API_KEY\n            }\n        })\n        .then(res=>res.json())\n        .then(data=>setDataPlayer(data))\n\n        data.forEach(()=>{\n            \n        })\n    })\n\n    \n\n    const addCardToBasket = (item) => {\n        const itemIndex = order.findIndex(orderItem => orderItem.id === item.id)\n        if (itemIndex < 0) {\n            const newItem = {\n                ...item,\n                quantity: 1\n            }\n            setOrder([...order, newItem])\n        }\n        else {\n            const newOrder = order.map((elem, index) => {\n                if (index === itemIndex) {\n                    return {\n                        ...elem,\n                        quantity: elem.quantity + 1\n                    }\n                }\n                else {\n                    return elem\n                }\n            })\n            setOrder(newOrder)\n        }\n        toast.success(\"you added item to basket successfully\", {\n            autoClose: 2000,\n        })\n        console.log(totalPrice)\n    }\n\n    const deleteCardFromBasket = (itemId) => {\n        const newOrder = order.filter(item => item.id !== itemId)\n        console.log(newOrder)\n        setOrder(newOrder)\n        toast.error(\"Item deleted successfully\", {\n            autoClose: 1000\n        }\n        )\n    }\n\n    // increment Product Item\n    const incrementQuantity = (itemId) => {\n        const newOrder = order.map((item) => {\n            if (item.id === itemId) {\n                return {\n                    ...item,\n                    quantity: item.quantity + 1\n                }\n            }\n            else {\n                return item\n            }\n        })\n        setOrder(newOrder)\n    }\n\n\n    // decrement Product Item\n    const decrementQuantity = (itemId) => {\n        const newOrder = order.map((item) => {\n            if (item.id === itemId) {\n                return {\n                    ...item,\n                    quantity: item.quantity > 0 ? item.quantity - 1 : 0\n                }\n            }\n            else {\n                return item\n            }\n        })\n        setOrder(newOrder)\n    }\n\n    const showBasket = () => {\n        setIsShowBasket(!isShowBasket)\n    }\n\n    useEffect(() => {\n        let totalPrice = 0;\n        order.length &&\n            order.forEach((item) => {\n                totalPrice += item.price * item.quantity;\n            })\n        setTotalPrice(totalPrice)\n    }, [order])\n\n    useEffect(() => {\n        fetch(`https://fortniteapi.io/v1/shop?lang=${contextEl}`, {\n            headers: {\n                Authorization: API_KEY\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setGoods(data.featured)\n            setLoading(false)\n        })\n    }, [contextEl]);\n\n    return (\n        <>\n            {\n            loading ? <Loader /> :\n                <div className='main container-fluid-m container-fluid-l container-sm' >\n                    <div className=\"row\">\n                        {\n                            isShowBasket &&\n                            <BasketList\n                                order={order}\n                                showBasket={showBasket}\n                                deleteCardFromBasket={deleteCardFromBasket}\n                                incrementQuantity={incrementQuantity}\n                                decrementQuantity={decrementQuantity}\n                                totalPrice={totalPrice}\n                            />\n                        }\n                        <ToastContainer />\n                        <ShoppinCart items={order} showBasket={showBasket} />\n                        <GoodList addCardToBasket={addCardToBasket} item={goods} />\n                    </div>\n                </div>\n            }\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}